
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target.
Return the sum of the three integers.

Assume that there will only be one solution

Example:
given array S = {-1 2 1 -4},
and target = 1.

CODE:-

int Solution::threeSumClosest(vector<int> &A, int B) {
    int n=A.size(),ans;
    int l,r,i=0;
    sort(A.begin(),A.end());
    ans=A[0]+A[1]+A[2];
    while(i<n-2)
    {
        l=i+1;
        r=n-1;
        if(A[i]==INT_MIN)
         while(A[l]<0)
          l++;
        while(l<r)
        {
            int p=A[i]+A[l]+A[r];
            int cmp;
            if(ans>B)
             cmp=ans-B;
            else
             cmp=B-ans;
            if(p>B)
            {
                if((p-B)<cmp)
                 ans=p;
                // cout<<ans<<" 1 ";
                r--;
            }
            else if(p<B)
            {
                if((B-p)<cmp)
                 ans=p;
                //   cout<<"p "<<p<<" ";
                //   cout<<ans<<" 2 ";
                l++;
            }
            else
             return B;
        }
        i++;
    }
    return ans;
}
